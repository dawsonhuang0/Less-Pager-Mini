/* v8 ignore start */
/* eslint-disable max-len */

import {
  UNDERLINE_ON,
  UNDERLINE_OFF,
  BOLD_ON,
  BOLD_OFF
} from "./constants";

const underline = {
  N: `${UNDERLINE_ON}N${UNDERLINE_OFF}`,
  pattern: `${UNDERLINE_ON}pattern${UNDERLINE_OFF}`,
  c1: `${UNDERLINE_ON}<c1>${UNDERLINE_OFF}`,
  c2: `${UNDERLINE_ON}<c2>${UNDERLINE_OFF}`,
  letter: `${UNDERLINE_ON}<letter>${UNDERLINE_OFF}`,
  file: `${UNDERLINE_ON}file${UNDERLINE_OFF}`,
  flag: `${UNDERLINE_ON}<flag>${UNDERLINE_OFF}`,
  name: `${UNDERLINE_ON}<name>${UNDERLINE_OFF}`,
  cmd: `${UNDERLINE_ON}cmd${UNDERLINE_OFF}`,
  command: `${UNDERLINE_ON}command${UNDERLINE_OFF}`,
  color: `${UNDERLINE_ON}color${UNDERLINE_OFF}`,
  prompt: `${UNDERLINE_ON}prompt${UNDERLINE_OFF}`,
  tag: `${UNDERLINE_ON}tag${UNDERLINE_OFF}`,
  tagsfile: `${UNDERLINE_ON}tagsfile${UNDERLINE_OFF}`,
  c: `${UNDERLINE_ON}c${UNDERLINE_OFF}`,
};

const BOLD_X = BOLD_ON + 'X' + BOLD_OFF;
const BOLD_x = BOLD_ON + 'x' + BOLD_OFF;

export const help = [
  '',
  `                   ${BOLD_ON}SUMMARY OF LESS COMMANDS${BOLD_OFF}`,
  '',
  `      Commands marked with * may be preceded by a number, ${underline.N}.`,
  `      Notes in parentheses indicate the behavior if ${underline.N} is given.`,
  '      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.',
  '',
  '  h  H                 Display this help.',
  '  q  :q  Q  :Q  ZZ     Exit.',
  ' ---------------------------------------------------------------------------',
  '',
  `                           ${BOLD_ON}MOVING${BOLD_OFF}`,
  '',
  `  e  ^E  j  ^N  CR  *  Forward  one line   (or ${underline.N} lines).`,
  `  y  ^Y  k  ^K  ^P  *  Backward one line   (or ${underline.N} lines).`,
  `  f  ^F  ^V  SPACE  *  Forward  one window (or ${underline.N} lines).`,
  `  b  ^B  ESC-v      *  Backward one window (or ${underline.N} lines).`,
  `  z                 *  Forward  one window (and set window to ${underline.N}).`,
  `  w                 *  Backward one window (and set window to ${underline.N}).`,
  `  ESC-SPACE         *  Forward  one window, but don't stop at end-of-file.`,
  `  d  ^D             *  Forward  one half-window (and set half-window to ${underline.N}).`,
  `  u  ^U             *  Backward one half-window (and set half-window to ${underline.N}).`,
  `  ESC-)  RightArrow *  Right one half screen width (or ${underline.N} positions).`,
  `  ESC-(  LeftArrow  *  Left  one half screen width (or ${underline.N} positions).`,
  '  ESC-}  ^RightArrow   Right to last column displayed.',
  '  ESC-{  ^LeftArrow    Left  to first column.',
  `  F                    Forward forever; like "tail -f".`,
  '  ESC-F                Like F but stop when search pattern is found.',
  '  r  ^R  ^L            Repaint screen.',
  '  R                    Repaint screen, discarding buffered input.',
  '        ---------------------------------------------------',
  `        Default "window" is the screen height.`,
  `        Default "half-window" is half of the screen height.`,
  ' ---------------------------------------------------------------------------',
  '',
  `                          ${BOLD_ON}SEARCHING${BOLD_OFF}`,
  '',
  `  /${underline.pattern}          *  Search forward for (${underline.N}-th) matching line.`,
  `  ?${underline.pattern}          *  Search backward for (${underline.N}-th) matching line.`,
  `  n                 *  Repeat previous search (for ${underline.N}-th occurrence).`,
  '  N                 *  Repeat previous search in reverse direction.',
  '  ESC-n             *  Repeat previous search, spanning files.',
  '  ESC-N             *  Repeat previous search, reverse dir. & spanning files.',
  '  ESC-u                Undo (toggle) search highlighting.',
  '  ESC-U                Clear search highlighting.',
  `  &${underline.pattern}          *  Display only matching lines.`,
  '        ---------------------------------------------------',
  '        A search pattern may begin with one or more of:',
  '        ^N or !  Search for NON-matching lines.',
  '        ^E or *  Search multiple files (pass thru END OF FILE).',
  '        ^F or @  Start search at FIRST file (for /) or last file (for ?).',
  `        ^K       Highlight matches, but don't move (KEEP position).`,
  `        ^R       Don't use REGULAR EXPRESSIONS.`,
  '        ^W       WRAP search if no match found.',
  ' ---------------------------------------------------------------------------',
  '',
  `                           ${BOLD_ON}JUMPING${BOLD_OFF}`,
  '',
  `  g  <  ESC-<       *  Go to first line in file (or line ${underline.N}).`,
  `  G  >  ESC->       *  Go to last line in file (or line ${underline.N}).`,
  `  p  %              *  Go to beginning of file (or ${underline.N} percent into file).`,
  `  t                 *  Go to the (${underline.N}-th) next tag.`,
  `  T                 *  Go to the (${underline.N}-th) previous tag.`,
  '  {  (  [           *  Find close bracket } ) ].',
  '  }  )  ]           *  Find open bracket { ( [.',
  `  ESC-^F ${underline.c1} ${underline.c2}  *  Find close bracket ${underline.c2}.`,
  `  ESC-^B ${underline.c1} ${underline.c2}  *  Find open bracket ${underline.c1}.`,
  '        ---------------------------------------------------',
  '        Each "find close bracket" command goes forward to the close bracket',
  `          matching the (${underline.N}-th) open bracket in the top line.`,
  '        Each "find open bracket" command goes backward to the open bracket',
  `          matching the (${underline.N}-th) close bracket in the bottom line.`,
  '',
  `  m${underline.letter}            Mark the current top line with <letter>.`,
  `  M${underline.letter}            Mark the current bottom line with <letter>.`,
  `  '${underline.letter}            Go to a previously marked position.`,
  `  ''                   Go to the previous position.`,
  `  ^X^X                 Same as '.`,
  `  ESC-M${underline.letter}        Clear a mark.`,
  '        ---------------------------------------------------',
  '        A mark is any upper-case or lower-case letter.',
  '        Certain marks are predefined:',
  '             ^  means  beginning of the file',
  '             $  means  end of the file',
  ' ---------------------------------------------------------------------------',
  '',
  `                        ${BOLD_ON}CHANGING FILES${BOLD_OFF}`,
  '',
  `  :e [${underline.file}]            Examine a new file.`,
  '  ^X^V                 Same as :e.',
  `  :n                *  Examine the (${underline.N}-th) next file from the command line.`,
  `  :p                *  Examine the (${underline.N}-th) previous file from the command line.`,
  `  :x                *  Examine the first (or ${underline.N}-th) file from the command line.`,
  '  :d                   Delete the current file from the command line list.',
  '  =  ^G  :f            Print current file name.',
  ' ---------------------------------------------------------------------------',
  '',
  `                    ${BOLD_ON}MISCELLANEOUS COMMANDS${BOLD_OFF}`,
  '',
  `  -${underline.flag}              Toggle a command line option [see OPTIONS below].`,
  `  --${underline.name}             Toggle a command line option, by name.`,
  `  _${underline.flag}              Display the setting of a command line option.`,
  `  __${underline.name}             Display the setting of an option, by name.`,
  `  +${underline.cmd}                 Execute the less cmd each time a new file is examined.`,
  '',
  `  !${underline.command}             Execute the shell command with $SHELL.`,
  `  |${BOLD_X}${underline.command}            Pipe file between current pos & mark ${BOLD_X} to shell command.`,
  `  s ${underline.file}               Save input to a file.`,
  '  v                    Edit the current file with $VISUAL or $EDITOR.',
  `  V                    Print version number of "less-pager-mini".`,
  ' ---------------------------------------------------------------------------',
  '',
  `                           ${BOLD_ON}OPTIONS${BOLD_OFF}`,
  '',
  '        Most options may be changed either on the command line,',
  '        or from within less by using the - or -- command.',
  '        Options may be given in one of two forms: either a single',
  '        character preceded by a -, or a name preceded by --.',
  '',
  '  -?  ........  --help',
  '                  Display help (from command line).',
  '  -a  ........  --search-skip-screen',
  '                  Search skips current screen.',
  '  -A  ........  --SEARCH-SKIP-SCREEN',
  '                  Search starts just after target line.',
  `  -b [${underline.N}]  ....  --buffers=[${underline.N}]`,
  `                  Number of buffers.`,
  '  -B  ........  --auto-buffers',
  `                  Don't automatically allocate buffers for pipes.`,
  '  -c  ........  --clear-screen',
  '                  Repaint by clearing rather than scrolling.',
  '  -d  ........  --dumb',
  '                  Dumb terminal.',
  `  -D ${BOLD_x}${underline.color}  .  --color=${BOLD_x}${underline.color}`,
  '                  Set screen colors.',
  '  -e  -E  ....  --quit-at-eof  --QUIT-AT-EOF',
  '                  Quit at end of file.',
  '  -f  ........  --force',
  '                  Force open non-regular files.',
  '  -F  ........  --quit-if-one-screen',
  '                  Quit if entire file fits on first screen.',
  '  -g  ........  --hilite-search',
  '                  Highlight only last match for searches.',
  '  -G  ........  --HILITE-SEARCH',
  `                  Don't highlight any matches for searches.`,
  `  -h [${underline.N}]  ....  --max-back-scroll=[${underline.N}]`,
  '                  Backward scroll limit.',
  '  -i  ........  --ignore-case',
  '                  Ignore case in searches that do not contain uppercase.',
  '  -I  ........  --IGNORE-CASE',
  '                  Ignore case in all searches.',
  `  -j [${underline.N}]  ....  --jump-target=[${underline.N}]`,
  '                  Screen position of target lines.',
  '  -J  ........  --status-column',
  '                  Display a status column at left edge of screen.',
  `  -k [${underline.file}]  .  --lesskey-file=[${underline.file}]`,
  '                  Use a lesskey file.',
  '  -K  ........  --quit-on-intr',
  '                  Exit less in response to ctrl-C.',
  '  -L  ........  --no-lessopen',
  '                  Ignore the LESSOPEN environment variable.',
  '  -m  -M  ....  --long-prompt  --LONG-PROMPT',
  '                  Set prompt style.',
  '  -n  -N  ....  --line-numbers  --LINE-NUMBERS',
  `                  Don't use line numbers.`,
  `  -o [${underline.file}]  .  --log-file=[${underline.file}]`,
  '                  Copy to log file (standard input only).',
  `  -O [${underline.file}]  .  --LOG-FILE=[${underline.file}]`,
  '                  Copy to log file (unconditionally overwrite).',
  `  -p [${underline.pattern}]  --pattern=[${underline.pattern}]`,
  '                  Start at pattern (from command line).',
  `  -P [${underline.prompt}]   --prompt=[${underline.prompt}]`,
  '                  Define new prompt.',
  '  -q  -Q  ....  --quiet  --QUIET  --silent --SILENT',
  '                  Quiet the terminal bell.',
  '  -r  -R  ....  --raw-control-chars  --RAW-CONTROL-CHARS',
  `                  Output "raw" control characters.`,
  '  -s  ........  --squeeze-blank-lines',
  '                  Squeeze multiple blank lines.',
  '  -S  ........  --chop-long-lines',
  '                  Chop (truncate) long lines rather than wrapping.',
  `  -t [${underline.tag}]  ..  --tag=[${underline.tag}]`,
  '                  Find a tag.',
  `  -T [${underline.tagsfile}] --tag-file=[${underline.tagsfile}]`,
  '                  Use an alternate tags file.',
  '  -u  -U  ....  --underline-special  --UNDERLINE-SPECIAL',
  '                  Change handling of backspaces.',
  '  -V  ........  --version',
  `                  Display the version number of "less-pager-mini".`,
  '  -w  ........  --hilite-unread',
  '                  Highlight first new line after forward-screen.',
  '  -W  ........  --HILITE-UNREAD',
  '                  Highlight first new line after any forward movement.',
  `  -x [${underline.N}[,...]]  --tabs=[${underline.N}[,...]]`,
  '                  Set tab stops.',
  '  -X  ........  --no-init',
  `                  Don't use termcap init/deinit strings.`,
  `  -y [${underline.N}]  ....  --max-forw-scroll=[${underline.N}]`,
  '                  Forward scroll limit.',
  `  -z [${underline.N}]  ....  --window=[${underline.N}]`,
  '                  Set size of window.',
  `  -" [${underline.c}[${underline.c}]]  .  --quotes=[${underline.c}[${underline.c}]]`,
  '                  Set shell quote characters.',
  '  -~  ........  --tilde',
  `                  Don't display tildes after end of file.`,
  `  -# [${underline.N}]  ....  --shift=[${underline.N}]`,
  '                  Set horizontal scroll amount (0 = one half screen width).',
  '                --follow-name',
  '                  The F command changes files if the input file is renamed.',
  '                --incsearch',
  '                  Search file as each pattern character is typed in.',
  '                --line-num-width=N',
  '                  Set the width of the -N line number field to N characters.',
  '                --mouse',
  '                  Enable mouse input.',
  '                --no-keypad',
  `                  Don't send termcap keypad init/deinit strings.`,
  '                --no-histdups',
  '                  Remove duplicates from command history.',
  '                --rscroll=C',
  '                  Set the character used to mark truncated lines.',
  '                --save-marks',
  '                  Retain marks across invocations of less.',
  '                --status-col-width=N',
  '                  Set the width of the -J status column to N characters.',
  '                --use-backslash',
  '                  Subsequent options use backslash as escape char.',
  '                --use-color',
  '                  Enables colored text.',
  '                --wheel-lines=N',
  '                  Each click of the mouse wheel moves N lines.',
  '',
  '',
  ' ---------------------------------------------------------------------------',
  '',
  `                          ${BOLD_ON}LINE EDITING${BOLD_OFF}`,
  '',
  '        These keys can be used to edit text being entered',
  `        on the "command line" at the bottom of the screen.`,
  '',
  ' RightArrow ..................... ESC-l ... Move cursor right one character.',
  ' LeftArrow ...................... ESC-h ... Move cursor left one character.',
  ' ctrl-RightArrow  ESC-RightArrow  ESC-w ... Move cursor right one word.',
  ' ctrl-LeftArrow   ESC-LeftArrow   ESC-b ... Move cursor left one word.',
  ' HOME ........................... ESC-0 ... Move cursor to start of line.',
  ' END ............................ ESC-$ ... Move cursor to end of line.',
  ' BACKSPACE ................................ Delete char to left of cursor.',
  ' DELETE ......................... ESC-x ... Delete char under cursor.',
  ' ctrl-BACKSPACE   ESC-BACKSPACE ........... Delete word to left of cursor.',
  ' ctrl-DELETE .... ESC-DELETE .... ESC-X ... Delete word under cursor.',
  ' ctrl-U ......... ESC (MS-DOS only) ....... Delete entire line.',
  ' UpArrow ........................ ESC-k ... Retrieve previous command line.',
  ' DownArrow ...................... ESC-j ... Retrieve next command line.',
  ' TAB ...................................... Complete filename & cycle.',
  ' SHIFT-TAB ...................... ESC-TAB   Complete filename & reverse cycle.',
  ' ctrl-L ................................... Complete filename, list all.'
];
